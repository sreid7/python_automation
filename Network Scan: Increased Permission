**Increase in privilege: Allowing ICMP to and from**

--First use // sudo ufw enable // enter machine password: Message: Firewall is active and enabled on system startup
--sudo ufw allow from (PLACE ATTACKERS IP ADDRESS HERE) to any /// (Allowing ICMP traffic from the IP address of the attacker)

--ping -c 4 (PLACE TARGET"S IP ADDRESS HERE) (This command is to test the ICMP connection by sending 4 ICMP echo requests to the target machine).

**BEST WAY TO GAIN ACCESS TO ANY SYSTEM WITH CREDENTIALED PERMISSIONS WOULD BE TO USE SSH. After that a proper scan can take place.**
**Install SSH**
sudo apt update
sudo apt install openssh-server
**Enable SSH**
sudo systemctl start ssh
sudo systemctl enable ssh
**Verify SSH Service**
sudo systemctl status ssh

**Test SSH Connections**
ssh username@target_ip_address


**PYTHON AUTOMATION: STARTS HERE**

import subprocess

def scan_network(ip_address, output_file):
    with open(output_file, 'w') as f:
        f.write("Starting network scan...\n")
        
        # Execute Nmap command with -Pn, -sT, -sV, and -v options
        nmap_cmd = ['nmap', '-sT', '-Pn', '-sV', '-v', '-p', '20,21,22,23,25,53,80,110,135,443,445,3389,3306,5432', ip_address]
        process = subprocess.Popen(nmap_cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)

        # Capture and write Nmap output to the file
        stdout, stderr = process.communicate()
        f.write(stdout)

        # Check for errors
        if stderr:
            f.write(f"Error occurred: {stderr}\n")
        else:
            f.write("Scan completed.\n")

if __name__ == '__main__':
    ip_address = '10.0.3.15'
    output_file = 'scan_results.txt'
    print(f"Scanning network {ip_address}...")
    scan_network(ip_address, output_file)
    print(f"Scan results written to {output_file}")

